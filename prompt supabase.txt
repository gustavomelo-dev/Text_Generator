

## üéØ Objetivo do Projeto

Criar um sistema **frontend** para gera√ß√£o de arquivos `.txt` de an√∫ncios publicit√°rios, com base em **modelos pr√©-definidos** contendo campos din√¢micos que s√£o preenchidos com dados de uma estrutura relacional.

### Campos Din√¢micos no Modelo

* `{ DATA_VALID }`
* `{ VEND_NUMBER }`
* `{ VEND_NAME }`
* `{ LOCALIDADE }`

---

## üì¶ Estrutura Inicial (Offline)

Como inicialmente n√£o era poss√≠vel utilizar banco de dados ou servi√ßos externos, foi criada uma estrutura **em mem√≥ria** no arquivo `dados.js`, simulando um banco de dados local. A estrutura seguiu um modelo relacional:

### üîó Relacionamentos

1. **Estado** ‚Üí possui v√°rias **Cidades**
2. **Cidade** ‚Üí pertence a um **Estado** e possui v√°rias **Lojas**
3. **Loja** ‚Üí pertence a uma **Cidade** e possui v√°rios **Vendedores**
4. **Vendedor** ‚Üí pertence a uma **Loja**

### üìÅ Exemplo do `dados.js`

```js
const dadosBrasil = {
  estados: [
    {
      nome: "S√£o Paulo",
      cidades: [
        {
          nome: "S√£o Paulo",
          lojas: [
            {
              nome: "Loja Central",
              cep: "32165-489",
              bairro: "Telemaco",
              rua: "Rua Exemplo",
              numeroLoja: 681,
              endereco: "Rua Exemplo, 681",
              vendedores: [
                {
                  nome: "Juliana",
                  numero: "11 99103-7658",
                  email: "juliana.torres@tecar.com.br",
                  cargo: "Consultor de Vendas"
                },
                {
                  nome: "Pablo",
                  numero: "11 99103-7658",
                  email: "pablo.marchada@tecar.com.br",
                  cargo: "Supervisor de Vendas"
                }
              ]
            }
          ]
        }
      ]
    }
  ]
};
```

---

## üåê Migra√ß√£o para Supabase

Com a possibilidade de usar a **Supabase**, a estrutura foi migrada para um banco de dados relacional real com suporte a API REST.

### üîß Estrutura do Banco no Supabase

```sql
-- Estados
CREATE TABLE estados (
  id SERIAL PRIMARY KEY,
  nome TEXT NOT NULL
);

-- Cidades
CREATE TABLE cidades (
  id SERIAL PRIMARY KEY,
  nome TEXT NOT NULL,
  estado_id INTEGER NOT NULL REFERENCES estados(id) ON DELETE CASCADE
);

-- Lojas
CREATE TABLE lojas (
  id SERIAL PRIMARY KEY,
  nome TEXT NOT NULL,
  cep TEXT,
  bairro TEXT,
  rua TEXT,
  numero_loja INTEGER,
  endereco TEXT,
  cidade_id INTEGER NOT NULL REFERENCES cidades(id) ON DELETE CASCADE
);

-- Vendedores
CREATE TABLE vendedores (
  id SERIAL PRIMARY KEY,
  nome TEXT NOT NULL,
  numero TEXT,
  email TEXT,
  cargo TEXT,
  loja_id INTEGER NOT NULL REFERENCES lojas(id) ON DELETE CASCADE
);
```

### üîë Informa√ß√µes de Acesso

* **API URL:** `https://cewpksxjcimadenhzsjq.supabase.co`
* **Chave P√∫blica (anon):**

```plaintext
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
```

---

## üìÇ Estrutura dos Arquivos do Projeto

```
/index.html
  ‚îî‚îÄ script.js            // Gera√ß√£o de .txt
  ‚îî‚îÄ scriptForm.js        // Coleta e envio dos dados
/dados.js                 // Simula√ß√£o antiga (ser√° removida)
```

---

## ‚úÖ Pr√≥ximos Passos

### 1. Substituir a l√≥gica do `dados.js`

Voc√™ deve substituir todas as intera√ß√µes com a vari√°vel `dadosBrasil` por chamadas REST usando a API da Supabase. Voc√™ pode usar `fetch` ou a biblioteca oficial `@supabase/supabase-js`.

### 2. Instalar SDK da Supabase (recomendado)

Inclua no seu HTML:

```html
<script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js"></script>
```

### 3. Inicializar o cliente Supabase

No in√≠cio do seu `script.js` e `scriptForm.js`:

```js
const SUPABASE_URL = 'https://cewpksxjcimadenhzsjq.supabase.co';
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...';
const supabase = supabase.createClient(SUPABASE_URL, SUPABASE_KEY);
```

### 4. Exemplo de Consulta com Supabase

```js
const { data, error } = await supabase
  .from('vendedores')
  .select('*, loja_id(*, cidade_id(*, estado_id(*)))');
```

### 5. Atualizar a Interface HTML

Dependendo de como os dados s√£o usados, ser√° necess√°rio atualizar os `<select>`, `<input>` e a l√≥gica de substitui√ß√£o dos placeholders nos arquivos `.txt`.

---

## üõ†Ô∏è Se voc√™ quiser ajuda com:

* Como organizar o c√≥digo com Supabase
* Refatorar os scripts para consumir a API
* Gerar o `.txt` com os dados din√¢micos
* Popular dropdowns (estados, cidades, lojas, vendedores) dinamicamente
